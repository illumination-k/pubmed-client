name: Publish to crates.io

on:
  workflow_call:
    inputs:
      package:
        description: "Package name to publish (e.g., pubmed-client, pubmed-cli)"
        required: true
        type: string
      package-path:
        description: "Path to the package directory (e.g., pubmed-client, pubmed-cli)"
        required: false
        type: string
        default: ""
      dry-run:
        description: "Perform a dry run without actually publishing"
        required: false
        type: boolean
        default: false
      check-version:
        description: "Check if version matches tag before publishing"
        required: false
        type: boolean
        default: true
    secrets:
      CRATES_IO_TOKEN:
        description: "Token for publishing to crates.io"
        required: true

jobs:
  publish:
    name: Publish ${{ inputs.package }} to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ inputs.package }}

      - name: Get package path
        id: pkg-path
        run: |
          if [ -z "${{ inputs.package-path }}" ]; then
            echo "path=${{ inputs.package }}" >> $GITHUB_OUTPUT
          else
            echo "path=${{ inputs.package-path }}" >> $GITHUB_OUTPUT
          fi

      - name: Extract version from tag
        id: tag-version
        if: inputs.check-version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          # Remove 'v' prefix if present
          VERSION=${TAG#v}
          # Extract version if tag follows pattern like 'package-name-v1.0.0'
          if [[ $TAG == *"${{ inputs.package }}"* ]]; then
            VERSION=${TAG##*-v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $VERSION"

      - name: Check Cargo.toml version
        id: cargo-version
        if: inputs.check-version
        working-directory: ${{ steps.pkg-path.outputs.path }}
        run: |
          VERSION=$(grep -m1 '^version' Cargo.toml | sed 's/.*"\(.*\)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Cargo.toml version: $VERSION"

      - name: Verify version match
        if: inputs.check-version
        run: |
          if [ "${{ steps.tag-version.outputs.version }}" != "${{ steps.cargo-version.outputs.version }}" ]; then
            echo "::error::Version mismatch! Tag: ${{ steps.tag-version.outputs.version }}, Cargo.toml: ${{ steps.cargo-version.outputs.version }}"
            exit 1
          fi
          echo "✓ Version match confirmed: ${{ steps.cargo-version.outputs.version }}"

      - name: Validate package
        working-directory: ${{ steps.pkg-path.outputs.path }}
        run: |
          echo "Validating package: ${{ inputs.package }}"
          cargo package --list
          cargo package --allow-dirty

      - name: Publish to crates.io (dry-run)
        if: ${{ inputs.dry-run }}
        working-directory: ${{ steps.pkg-path.outputs.path }}
        run: |
          echo "Dry run - would publish: ${{ inputs.package }}"
          cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        if: ${{ !inputs.dry-run }}
        working-directory: ${{ steps.pkg-path.outputs.path }}
        run: |
          echo "Publishing package: ${{ inputs.package }}"
          cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish summary
        if: ${{ !inputs.dry-run }}
        run: |
          echo "### ✅ Published to crates.io" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: ${{ inputs.package }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.cargo-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **crates.io**: https://crates.io/crates/${{ inputs.package }}" >> $GITHUB_STEP_SUMMARY
