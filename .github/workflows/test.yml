name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  MISE_EXPERIMENTAL: true

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Pull Git LFS files
        run: git lfs pull

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - uses: jdx/mise-action@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run lint
        run: mise run lint

      - name: Check docs
        run: cargo doc --all-features --no-deps
        env:
          RUSTDOCFLAGS: "-D warnings"

  test:
    name: Test Suite
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Pull Git LFS files
        run: git lfs pull

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - uses: jdx/mise-action@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run unit tests
        run: mise run test

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/nextest/*/junit.xml

  wasm-tests:
    name: WASM TypeScript Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Pull Git LFS files
        run: git lfs pull

      - uses: jdx/mise-action@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: latest

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pubmed-client-wasm/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-

      - name: Build WASM package
        working-directory: pubmed-client-wasm
        run: pnpm run build

      - name: Install TypeScript dependencies
        working-directory: pubmed-client-wasm
        run: pnpm install

      - name: Run Biome linting and formatting
        working-directory: pubmed-client-wasm
        run: pnpm run ci

      - name: Run TypeScript tests
        working-directory: pubmed-client-wasm
        run: pnpm run test
