[package]
name = "pubmed-client-rs"
version.workspace = true
authors.workspace = true
autotests = false
categories = ["api-bindings", "science", "web-programming::http-client"]
edition.workspace = true
keywords = ["pubmed", "biomedical", "research", "api", "pmc"]
license.workspace = true
readme = "../README.md"
repository.workspace = true
description = "An async Rust client for PubMed and PMC APIs for retrieving biomedical research articles"

[lib]
crate-type = ["rlib"]

[dependencies]
anyhow = { workspace = true }
quick-xml = { workspace = true }
rand = "0.8"
regex = "1.10"
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
urlencoding = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
reqwest = { version = "0.11", features = ["json", "stream"] }
tokio = { version = "1.0", features = ["full"] }
tokio-retry = "0.3"
tokio-util = "0.7"
tar = "0.4"
flate2 = "1.0"
futures-util = "0.3"
image = "0.24"

[target.'cfg(target_arch = "wasm32")'.dependencies]
reqwest = { version = "0.11", features = ["json"], default-features = false }
tokio = { version = "1.0", features = ["macros", "rt", "time"], default-features = false }
getrandom = { version = "0.2", features = ["js"] }

[features]
default = []
integration-tests = []

[dev-dependencies]
rstest = "0.18"
tempfile = "3.0"
tokio-test = "0.4"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-test = "0.2"
wiremock = "0.6"

# Integration tests
# Comprehensive test suites
[[test]]
name = "comprehensive_pmc_tests"
path = "tests/integration/comprehensive_pmc_tests.rs"

[[test]]
name = "comprehensive_pubmed_tests"
path = "tests/integration/comprehensive_pubmed_tests.rs"

[[test]]
name = "comprehensive_einfo_tests"
path = "tests/integration/comprehensive_einfo_tests.rs"

[[test]]
name = "comprehensive_elink_tests"
path = "tests/integration/comprehensive_elink_tests.rs"

# Feature-specific tests
[[test]]
name = "markdown_tests"
path = "tests/integration/markdown_tests.rs"

[[test]]
name = "pmc_xml_tests"
path = "tests/integration/pmc_xml_tests.rs"

[[test]]
name = "test_abstract_parsing"
path = "tests/integration/test_abstract_parsing.rs"

[[test]]
name = "test_einfo_integration"
path = "tests/integration/test_einfo_integration.rs"

[[test]]
name = "test_elink_integration"
path = "tests/integration/test_elink_integration.rs"

[[test]]
name = "test_integration_abstract"
path = "tests/integration/test_integration_abstract.rs"

[[test]]
name = "test_mesh_integration"
path = "tests/integration/test_mesh_integration.rs"

[[test]]
name = "test_rate_limiting_mocked"
path = "tests/integration/test_rate_limiting_mocked.rs"

[[test]]
name = "test_supplemental_material"
path = "tests/integration/test_supplementary_materials.rs"

[[test]]
name = "test_tar_extraction"
path = "tests/integration/test_tar_extraction.rs"

[[test]]
name = "test_figure_extraction"
path = "tests/integration/test_figure_extraction.rs"

# Real API tests (opt-in)
[[test]]
name = "test_real_api_rate_limiting"
path = "tests/integration/test_real_api_rate_limiting.rs"

[[test]]
name = "pubmed_api_tests"
path = "tests/integration/pubmed_api_tests.rs"

[[test]]
name = "pmc_api_tests"
path = "tests/integration/pmc_api_tests.rs"

[[test]]
name = "error_handling_tests"
path = "tests/integration/error_handling_tests.rs"
